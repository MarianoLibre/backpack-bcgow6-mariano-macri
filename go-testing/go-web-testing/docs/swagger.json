{
    "swagger": "2.0",
    "info": {
        "description": "This API Handle MELI Products.",
        "title": "MELI Bootcamp API FP",
        "termsOfService": "https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "API Support",
            "url": "https://localhost:8080/"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/products": {
            "post": {
                "description": "create products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Product to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/products/:id": {
            "delete": {
                "description": "delete product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "update products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Product to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouses": {
            "get": {
                "description": "get warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get warehouse by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "create warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "update warehouses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/buyers": {
            "get": {
                "description": "get buyers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "List buyers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "204": {
                        "description": "empty buyer list",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "description": "post new buyer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Create buyer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Buyer to create",
                        "name": "domain.Buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "buyer successfully created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "The card number ID provided is already registered",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "422": {
                        "description": "error: ¡incomplete fields!",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "error while saving",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/buyers/{id}": {
            "get": {
                "description": "get buyer by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Get buyer by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Buyer not exist",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Buyer not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete buyer by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Delete buyer by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "buyer not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "update buyer by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Update buyer by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Buyer to update",
                        "name": "domain.Buyer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Buyer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "buyer not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "422": {
                        "description": "unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Show the list of employees in db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "No employees found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Failure executing listing service",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Save a new employee in db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee to save",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.employeeDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Employee created",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "The employee was saved, but it couldn't be retrieved by ID",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "The card number ID provided is already registered",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "422": {
                        "description": "Gin validator error",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Failure executing creation service",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Show the required employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Malformed ID",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete a required employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Malformed ID",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: empty or invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Failure executing delete service",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update the employee with the required fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Employee fields to update",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.employeeToUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Malformed ID",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: empty or invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "The card number ID provided is already registered",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "422": {
                        "description": "Gin validator error",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Failure executing update service",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "get products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/products/:id": {
            "get": {
                "description": "get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Show the list of sections in db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sections",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error ",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Save a new section in db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Section to save",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SectionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created section",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "422": {
                        "description": "Gin validator error",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        },
        "/sections/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Show the required section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized + invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sections"
                ],
                "summary": "Update the section with the required fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Section fields to update",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateSectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: empty or invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Section no found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "409": {
                        "description": "Section number is already in use",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Sections"
                ],
                "summary": "Delete a required section",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Section ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: empty or invalid token",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    },
                    "404": {
                        "description": "Section not found",
                        "schema": {
                            "$ref": "#/definitions/web.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Buyer": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "handler.SectionRequest": {
            "type": "object",
            "required": [
                "current_capacity",
                "current_temperature",
                "maximum_capacity",
                "minimum_capacity",
                "minimum_temperature",
                "product_type_id",
                "section_number",
                "warehouse_id"
            ],
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateSectionRequest": {
            "type": "object",
            "properties": {
                "current_capacity": {
                    "type": "integer"
                },
                "current_temperature": {
                    "type": "integer"
                },
                "maximum_capacity": {
                    "type": "integer"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "product_type_id": {
                    "type": "integer"
                },
                "section_number": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.employeeDTO": {
            "type": "object",
            "required": [
                "card_number_id",
                "first_name",
                "last_name",
                "warehouse_id"
            ],
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.employeeToUpdateDTO": {
            "type": "object",
            "properties": {
                "card_number_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "warehouse_id": {
                    "type": "integer"
                }
            }
        },
        "handler.request": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "minimum_capacity": {
                    "type": "integer"
                },
                "minimum_temperature": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                },
                "warehouse_code": {
                    "type": "string"
                }
            }
        },
        "web.response": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}